1. Скачайте файл my_first_dag.py, поместите его в папку airflow/dags. Перезапустите airflow и запустите этот dag.
Посмотрите логи вывода.

Файл скачан и помещен в каталог с дагами
(etl) gbss@gbus:~$ ls -la ./airflow/dags/
total 16
drwxrwxr-x 3 gbss gbss 4096 Dec 10 15:20 .
drwxrwxr-x 5 gbss gbss 4096 Dec 10 15:23 ..
-rw-rw-r-- 1 gbss gbss  510 Dec  5 06:53 my_first_dag.py
drwxrwxr-x 2 gbss gbss 4096 Dec 10 15:20 __pycache__

Даг запущен логи вывода запуска
gbss@gbus:~$ cat ./airflow/logs/dag_id\=my_first_dag/run_id\=scheduled__2023-12-09T12\:00\:00+00\:00/task_id\=hello_task/attempt\=1.log
[2023-12-10T15:06:46.796+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: my_first_dag.hello_task scheduled__2023-12-09T12:00:00+00:00 [queued]>
[2023-12-10T15:06:46.802+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: my_first_dag.hello_task scheduled__2023-12-09T12:00:00+00:00 [queued]>
[2023-12-10T15:06:46.802+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 1
[2023-12-10T15:06:46.817+0000] {taskinstance.py:1382} INFO - Executing <Task(PythonOperator): hello_task> on 2023-12-09 12:00:00+00:00
[2023-12-10T15:06:46.821+0000] {standard_task_runner.py:57} INFO - Started process 198788 to run task
[2023-12-10T15:06:46.825+0000] {standard_task_runner.py:84} INFO - Running: ['airflow', 'tasks', 'run', 'my_first_dag', 'hello_task', 'scheduled__2023-12-09T12:00:00+00:00', '--job-id', '17', '--raw', '--subdir', '/home/gbss/airflow/dags', '--cfg-path', '/tmp/tmp3q_27_ns']
[2023-12-10T15:06:46.826+0000] {standard_task_runner.py:85} INFO - Job 17: Subtask hello_task
[2023-12-10T15:06:46.870+0000] {task_command.py:416} INFO - Running <TaskInstance: my_first_dag.hello_task scheduled__2023-12-09T12:00:00+00:00 [running]> on host gbus
[2023-12-10T15:06:46.962+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='my_first_dag' AIRFLOW_CTX_TASK_ID='hello_task' AIRFLOW_CTX_EXECUTION_DATE='2023-12-09T12:00:00+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='scheduled__2023-12-09T12:00:00+00:00'
[2023-12-10T15:06:46.964+0000] {python.py:194} INFO - Done. Returned value was: Hello world from first Airflow DAG!
[2023-12-10T15:06:46.977+0000] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=my_first_dag, task_id=hello_task, execution_date=20231209T120000, start_date=20231210T150646, end_date=20231210T150646
[2023-12-10T15:06:46.997+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 0
[2023-12-10T15:06:47.012+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check

2. Измените этот dag так, чтобы он выводил в консоль текст «Привет + ваше имя». Посмотрите в логах, что dag выводит
то, что вы хотите.

from datetime import datetime
from airflow import DAG
# from airflow.operators.dummy_operator import DummyOperator     << --- устаревшие операторы, на которые ругается Python 3.8
# from airflow.operators.python_operator import PythonOperator
from airflow.operators.empty import EmptyOperator
from airflow.operators.python import PythonOperator

def print_hello():
    return 'Hi, Alex!'

dag = DAG('my_first_dag', description='Hello World DAG',
#          schedule_interval='0 12 * * *',
          schedule='0 12 * * *',
          start_date=datetime(2017, 3, 20), catchup=False)

hello_operator = PythonOperator(task_id='hello_task', python_callable=print_hello, dag=dag)

hello_operator

Код устарел. 
Выводится сообщение
~/airflow/dags/my_first_dag.py:3 DeprecationWarning: The `airflow.operators.dummy_operator.DummyOperator` class is deprecated. Please use `'airflow.operators.empty.EmptyOperator'`.
~/airflow/dags/my_first_dag.py:4 DeprecationWarning: The `airflow.operators.python_operator.PythonOperator` class is deprecated. Please use `'airflow.operators.python.PythonOperator'`.
~/airflow/dags/my_first_dag.py:9 RemovedInAirflow3Warning: Param `schedule_interval` is deprecated and will be removed in a future release. Please use `schedule` instead.


[2023-12-10, 16:55:19 UTC] {task_command.py:416} INFO - Running <TaskInstance: my_first_dag.hello_task manual__2023-12-10T16:55:15.866029+00:00 [running]> on host gbus
[2023-12-10, 16:55:19 UTC] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='airflow' AIRFLOW_CTX_DAG_ID='my_first_dag' AIRFLOW_CTX_TASK_ID='hello_task' AIRFLOW_CTX_EXECUTION_DATE='2023-12-10T16:55:15.866029+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-12-10T16:55:15.866029+00:00'
[2023-12-10, 16:55:19 UTC] {python.py:194} INFO - Done. Returned value was: Hi, Alex!
[2023-12-10, 16:55:19 UTC] {taskinstance.py:1400} INFO - Marking task as SUCCESS. dag_id=my_first_dag, task_id=hello_task, execution_date=20231210T165515, start_date=20231210T165518, end_date=20231210T165519
[2023-12-10, 16:55:19 UTC] {local_task_job_runner.py:228} INFO - Task exited with return code 0


3.  Скачайте файл my_second_dag.py поместите его в папку airflow/dags.
Объясните, что происходит в рамках этого процесса.
(etl) gbss@gbus:~$ ls -la ./airflow/dags/
total 20
drwxrwxr-x 3 gbss gbss 4096 Dec 10 17:00 .
drwxrwxr-x 6 gbss gbss 4096 Dec 10 17:10 ..
-rw-rw-r-- 1 gbss gbss  624 Dec 10 16:54 my_first_dag.py
-rw-rw-r-- 1 gbss gbss 1243 Dec  5 06:53 my_second_dag.py
drwxrwxr-x 2 gbss gbss 4096 Dec 10 17:01 __pycache__

Путь к каталогу ./airflow/dags/
Содержится в конфигурационном файле 
$AIRFLOW_HOME/airflow.cfg
параметр
dags_folder = .../dags

С периодичностью, заданной в параметре 
dag_dir_list_interval = 300
этого же файла 

происходит опрос каталога и появившиеся в каталоге файлы DAG отображаюстя в веб интерфейсе.
Отображение происходит по имени DAG-а указанного при вызове конструктора DAG-а.
DAG("my_dag", 